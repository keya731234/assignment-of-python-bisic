{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3c60d62b-6ad9-4ff2-ade6-023674837fef",
   "metadata": {},
   "source": [
    "##question 2. example of keywords"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1b5ebc5a-8f8e-429b-949e-6785a0dc1e84",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "false\n"
     ]
    }
   ],
   "source": [
    "a= \"ture\"  #operational keywords\n",
    "b=\"false\"\n",
    "print(a and b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e6305c2d-09f9-426e-88c3-098ca216598e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ture\n"
     ]
    }
   ],
   "source": [
    "print(a or b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "78421456-fcaa-408e-b6dc-f9744d312610",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "a= \"potato\",\"rice\",\"sumber\"\n",
    "print(\"rice\"in(\"potato\",\"rice\",\"sumber\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e369293a-a6f7-4ad7-bc99-ffe1c83f137c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "x is greater than 13\n"
     ]
    }
   ],
   "source": [
    "x=25 #control flow keywords\n",
    "if x>13:\n",
    "    print(\"x is greater than 13\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4810286-217b-4206-ad42-8e71d724be85",
   "metadata": {},
   "source": [
    "# question no 3. example of mutable and immutable"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "441f157e-f8ce-409b-9054-2fc97456a910",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "12\n"
     ]
    }
   ],
   "source": [
    "x=7\n",
    "x=x+5\n",
    "print(x)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "30b26c84-cb19-45d5-80bf-4d2b86ac7f96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 4, 'ram', 'school']"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list_cont=[ 1,2,3,4,\"ram\",\"school\"]\n",
    "list_cont"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "1adc30d9-308d-429b-946d-a6612521f482",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list_cont[3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "fb255476-d154-4cfd-8d76-b284305d57c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 300, 4, 'ram', 'school']"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list_cont[2]=300  #mutable\n",
    "list_cont"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d065a1f1-9107-441b-964e-0152119fab0c",
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "'str' object does not support item assignment",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[28], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m b\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcollage\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[1;32m----> 2\u001b[0m b[\u001b[38;5;241m0\u001b[39m]\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mp\u001b[39m\u001b[38;5;124m\"\u001b[39m\n",
      "\u001b[1;31mTypeError\u001b[0m: 'str' object does not support item assignment"
     ]
    }
   ],
   "source": [
    "b= \"collage\"\n",
    "b[0]=\"p\"     #immutable "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29e92aa7-ea00-4c97-91b9-541975ecf6bf",
   "metadata": {},
   "source": [
    "##question no 4. question example of different type of operator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "61a3d9c3-6967-4aaa-84a1-abc96bfd7a36",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "70"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a=40\n",
    "b=30\n",
    "a+b #arithmatic oprator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "419203bb-925f-4e0b-90ec-5bc4db560188",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1200"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a*b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "403e8ef3-647c-4929-9fa8-84227b770dd3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.3333333333333333"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a/b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "738ecdba-07a9-4d47-af27-4cd59833c5bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "50%5 #it gets remainder#modulas operator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a7ff94b1-be72-4129-bbd6-4ec89108f295",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "25"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "5**2 #5 to power 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ff3de7e4-3e1d-4dbd-965f-13fe124912e9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "9//4 #float value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7e5b31f8-7254-4060-891b-37122f780da2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"mango\"== \"banana\" #equel to # comparision operator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "eec5bffa-cea9-430e-b137-d8b499bde6d4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "6!=4 #not equal to"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f8916c6f-ce1f-4708-b674-5881faab1aab",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'false'"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"true\" and \"false\" #logical and operator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "f4f817d8-66d5-453a-b138-04d6ad11a4cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'flase'"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\"flase\"or \"false\" #logical or operator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "88e0a89f-898e-4b3e-93b7-8aecc1cc9366",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "21"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "g= 16 assignment operator\n",
    "g+=5\n",
    "g\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "5a72a91e-f476-42b0-913c-f3c397e06ce6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rain=\"cloud\" #membership operator\n",
    "\"l\" in rain"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "39ee226f-23bb-4f8d-a563-bd576cef8343",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "t= \"shool\"  # identity operator\n",
    "b= \"student\"\n",
    "t is b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fb55600d-d5a7-4338-a02a-eaa601574bfa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "12"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "14 & 12    #bit wise operator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "ddf4b2c9-5263-4e95-af7d-873b6ec79ff5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0b1110'"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin(14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "1f0e691c-09a3-4038-b2cf-a4cbe52cc2b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0b1100'"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin (12)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "c17b4000-648b-4ea6-ae8c-48c44cddf3ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "-7"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "~6 #negation operator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e60db5e5-a5ee-4939-8a45-6d1bf709571d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "6^4 #bitwise xor operator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1ca0a043-a4b3-4637-a6b4-862a7bfd5b98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0b110'"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin(6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "b080f77b-43ec-4a80-8bc7-f123fca9fdaf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0b100'"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin(4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "fbde20a1-dd51-40e3-aab0-1ebad7873aaa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "640"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "40<<4 # left shift operator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "58796da4-2bc7-4616-99a1-c8f5a65ec443",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0b101000'"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin(40)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "2f13fd6b-304c-4ce3-963d-606dd1f6a0b6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0b1010000000'"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin(640)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "2f8092a4-db5f-4eb8-988a-3c5e33290850",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "32"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "256>>3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "e8fe4129-c642-40b6-84d4-a9bbb251b7fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0b100000000'"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin (256)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "4fbb7f75-92d1-4e49-a50c-0a1430a8e323",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'0b100000'"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bin(32)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "6b37e7d0-1950-4b5e-89a7-bf600ad5105b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "14"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "34-(5*4) #order in precedence"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5d7c9a79-cb85-4e78-ae8e-d73091148fd6",
   "metadata": {},
   "source": [
    "### question no 5. example of type casting."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "dd5ce3f8-8c00-4c4d-b6ee-3fbdbdaae475",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "int"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# it has two type .\n",
    "#implecit type casting \n",
    "a=9 \n",
    "type(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "e73f9c9d-2983-4929-a4ee-735638a8d529",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "6+3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "3b8da5bf-555a-44a5-80a6-9278662d0567",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9.3"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "6+3.3  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "e70fefe8-2c1e-46a6-b162-3c3fed6aa4e9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "int"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#explicit type casting\n",
    "a=9\n",
    "type (a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "214a2dc8-e347-453e-a5f4-8a36fa2764c2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "int(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "0146c708-e455-4793-9e82-91e7a6598e79",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "9.0"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "float(a)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0369369a-ab9a-4048-812f-dcc8f2509b63",
   "metadata": {},
   "source": [
    "### question no 6. example of condition data type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "0e5b01cc-748a-4f17-9418-32c049b2b78b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "do very well\n"
     ]
    }
   ],
   "source": [
    "keya= \"good student\"\n",
    "if keya== \"good student\":\n",
    "    print (\"do very well\")\n",
    "else:\n",
    "    print(\"give up\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1196a44a-c804-4cc7-b073-e43fa0577e7b",
   "metadata": {},
   "source": [
    "#### question no 7. different type of loop's example."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a7e7ff9c-27a8-4c42-8c0c-a113310e03ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "count=5\n",
    "while count>0:\n",
    "    print (count)\n",
    "    count = count-1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8569b2a9-7a7a-446c-a113-2c0c7a73b18c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f175290e-ab9c-483f-a1c8-2cd1a007a85b",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
